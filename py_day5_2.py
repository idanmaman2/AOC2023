import re,itertools,functools,bisect
data = open("./inps/input_day5.txt",'r').read()
print(min(functools.reduce(lambda y, x:itertools.chain(*[[(max(0,i-x[0][j])+x[0][j]+x[1][j],r if j==len(x[0])-1 and i >= x[0][j]else i+r-x[0][j]if j==len(x[0])-1 else r if x[0][j]<=i and x[0][j+1]>=i+r else i+r-x[0][j]if x[0][j+1]>i+r else x[0][j+1]-x[0][j] if i<=x[0][j]<=i+r else x[0][j+1]-i) for j in range(bisect.bisect(x[0], i)-1,bisect.bisect(x[0],i+r-1))] for i, r in y]),map(lambda x :list(zip(*sorted(x.items(),key=lambda y:y[0]))),map(lambda x :{0:0}|dict((i[1]+i[2],0) for i in x)|dict([i[1],i[0]-i[1]]for i in x),map(lambda x :list(map(lambda x:list(map(int,x[0].split())),re.findall("((\d+\ ?)+)",x))),data.split("\n\n")[1:]))),(lambda x:((x[i],x[i+1])for i in range(0,len(x),2)))(list(map(int,re.findall("\d+",data.split("\n")[0]))))),key= lambda x :x[0])[0])
